name: Release

on:
    push:
        branches:
            - 'main'
        tags: 
            - 'v*.*.*'
    workflow_dispatch:

jobs:
    build:
        name: Build JSON Schema and Release
        runs-on: ubuntu-latest
        steps:
            - name: Check out the code
              uses: actions/checkout@v4
              with:
                fetch-depth: 1
            
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.12.4'

            - name: Install Poetry
              uses: abatilo/actions-poetry@v3
              with: 
                poetry-version: '1.8.3'
            
            - name: Setup a local virtual environment (if no poetry.toml file)
              run: |
                poetry config virtualenvs.in-project true
                poetry config virtualenvs.in-project true --local
            
            - uses: actions/cache@v4
              name: Cache Poetry virtualenv
              with:
                path: ./.venv
                key: venv-${{ hashFiles('poetry.lock') }}

            - name: Install dependencies
              run: poetry install  
            
            - name: Build JSON Schema
              run: |
                poetry run python jsonSchemas/main.py
            - name: Compress Sha256 Hashes to Zip & Tar
              run: |
                    zip -r jsonSchemas/dist/shas.zip jsonSchemas/dist/shas
                    tar -czvf jsonSchemas/dist/shas.tar.gz jsonSchemas/dist/shas
                    rm -rf jsonSchemas/dist/shas
            - name: Generate A Release
              uses: softprops/action-gh-release@v2
              with:
                files: |
                  jsonSchemas/dist/*.json
                  jsonSchemas/dist/shas.zip
                  jsonSchemas/dist/shas.tar.gz